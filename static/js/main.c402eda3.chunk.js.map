{"version":3,"sources":["components/modules/CreateNewAccount/CreateNewAccount.module.css","components/ui/NavBar/NavBar.module.css","helpers/history.js","helpers/stringify.js","helpers/apiHelpers/user.js","helpers/tokenService.js","components/ui/Login/Login.js","components/ui/NavBar/NavBar.js","components/ui/Profile/Profile.js","components/ui/NoMatch/NoMatch.js","components/modules/CreateNewAccount/CreateNewAccount.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createBrowserHistory","stringify","obj","Object","keys","map","key","join","url","onCreateUser","body","path","axios","post","then","data","console","log","catch","err","onGetUser","email","password","get","onGetUserById","id","setToken","token","localStorage","setItem","Login","props","onHandleValidate","e","onHandleChange","target","value","setState","onHandleSubmit","a","preventDefault","state","_email","_password","userAPI","user","history","push","document","location","reload","this","className","s","login","onSubmit","htmlFor","type","onChange","onBlur","placeholder","href","Component","NavBar","nav_bar","Profile","userInfo","_user","onHandleValidation","_age","_isAdmin","_firstName","_lastName","_displayName","_notificationPreference","_organization","userId","match","params","_phoneNumber","profile","profile_form","NoMatch","CreateNewAccount","newUser","_comparePassword","_isMatchingPassword","_organizationName","_organizationSize","create_new_account","create_new_account_form","App","useState","exact","component","Boolean","window","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c402eda3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"create_new_account_form\":\"CreateNewAccount_create_new_account_form__y42xB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_bar\":\"NavBar_nav_bar__3gHrQ\"};","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory({});\n","export const stringify = obj => {\n  return Object.keys(obj)\n    .map(key => key + \"=\" + obj[key])\n    .join(\"&\");\n};\n","import axios from \"axios\";\n\n// helpers\nimport { stringify } from \"./../stringify\";\nconst url = \"http://localhost:3001\";\n\nexport const onCreateUser = ({ body = {} }) => {\n  const path = `${url}/user`;\n  return axios\n    .post(path, body)\n    .then(data => {\n      console.log(data, \"created a new user\");\n      return data;\n    })\n    .catch(err => {\n      throw err;\n    });\n};\n\nexport const onGetUser = ({ email = \"\", password = \"\" }) => {\n  const path = `${url}/user?${stringify({ email, password })}`;\n  return axios\n    .get(path)\n    .then(data => {\n      return data.data;\n    })\n    .catch(err => {\n      throw err;\n    });\n};\n\nexport const onGetUserById = ({ id }) => {\n  const path = `${url}/${id}`;\n  return axios.get(path).then(data => {\n    return data.data;\n  });\n};\n","export const setToken = token => {\n  localStorage.setItem(\"token\", token);\n};\n\nexport const getToken = token => {\n  localStorage.getItem(\"token\");\n};\n\nexport const removeToken = () => {\n  localStorage.removeItem(\"token\");\n};\n","import React, { Component } from \"react\";\nimport history from \"./../../../helpers/history\";\nimport s from \"./Login.module.css\";\n\n// API\nimport * as userAPI from \"./../../../helpers/apiHelpers/user\";\n\n// helpers\nimport { stringify } from \"./../../../helpers/stringify\";\nimport { setToken } from \"../../../helpers/tokenService\";\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _email: \"\",\n      _password: \"\"\n    };\n  }\n\n  onHandleValidate = e => {\n    console.log(\"validating\");\n  };\n  onHandleChange = e => {\n    const { id, value } = e.target;\n    return this.setState({\n      [id]: value\n    });\n  };\n  onHandleSubmit = async e => {\n    e.preventDefault();\n    const { _email, _password } = this.state;\n    console.log(stringify({ email: \"haha\", password: \"haha\" }));\n    try {\n      const {\n        data: [token, user]\n      } = await userAPI.onGetUser({ email: _email, password: _password });\n      setToken(token);\n      console.log(\"user info\", user);\n      history.push(`/home/${user.id}`);\n      document.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  render() {\n    const { _password, _email } = this.state;\n    return (\n      <section className={s.login}>\n        <h1>Bug Tracker</h1>\n        <div>\n          <form onSubmit={this.onHandleSubmit}>\n            <label htmlFor='_email'>\n              <input\n                type='text'\n                id='_email'\n                value={_email}\n                onChange={this.onHandleChange}\n                onBlur={this.onHandleValidate}\n                placeholder='Email'\n              />\n            </label>\n            <label htmlFor='_password'>\n              <input\n                type='password'\n                id='_password'\n                value={_password}\n                onChange={this.onHandleChange}\n                onBlur={this.onHandleValidate}\n                placeholder='password'\n              />\n            </label>\n            <button type='submit'>Login</button>\n          </form>\n          <a href='/create-account'>create new account</a>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport s from \"./NavBar.module.css\";\n\nconst NavBar = props => {\n  return <section className={s.nav_bar}>nav bar</section>;\n};\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport s from \"./Profile.module.css\";\n\n// apiHelpers\nimport * as userAPI from \"./../../../helpers/apiHelpers/user\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      _email: \"\",\n      _age: \"\",\n      _isAdmin: false,\n      _firstName: \"\",\n      _lastName: \"\",\n      _displayName: \"\",\n      _notificationPreference: {},\n      _organization: \"\",\n      _user: {}\n    };\n  }\n  componentDidMount() {\n    const { userId } = this.props.match.params;\n    this.onGetUser(userId);\n  }\n  onGetUser = async id => {\n    const { data: userInfo } = userAPI.onGetUserById({ id });\n    return this.setState({ _user: userInfo });\n  };\n  onHandleChange = e => {\n    const { value, id } = e.target;\n  };\n\n  onHandleValidation = e => {\n    return;\n  };\n\n  render() {\n    const {\n      _email,\n      _age,\n      _isAdmin,\n      _firstName,\n      _lastName,\n      _displayName,\n      _phoneNumber,\n      _notificationPreference\n    } = this.state;\n    return (\n      <section className={s.profile}>\n        <h2> I'm a Profile!</h2>\n        <form className={s.profile_form}>\n          <label htmlFor='_email'>\n            <input\n              type='email'\n              id='_email'\n              onBlur={this.onHandleValidation}\n              onChange={this.onHandleChange}\n              value={_email}\n            />\n          </label>\n          {/*<label htmlFor>\n            <input type='email' id='' onBlur={onHandleValidation} onChange={this.onHandleChange} value={} />\n          </label> */}\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default Profile;\n","import React from \"react\";\nconst NoMatch = props => {\n  return <section>no page found error:404</section>;\n};\n\nexport default NoMatch;\n","import React, { Component } from \"react\";\nimport s from \"./CreateNewAccount.module.css\";\n\n// API\nimport * as userAPI from \"./../../../helpers/apiHelpers/user\";\n\nclass CreateNewAccount extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _email: \"\",\n      _password: \"\",\n      _comparePassword: \"\",\n      _isMatchingPassword: \"\",\n      _phoneNumber: \"\",\n      _organizationName: \"\",\n      _organizationSize: \"\",\n      _isAdmin: false\n    };\n  }\n\n  onHandleValidate = e => {\n    console.log(\"validating\");\n  };\n  onHandleChange = e => {\n    console.log(e.target.value, e.target.id);\n    const { value, id } = e.target;\n    return this.setState({\n      [id]: value\n    });\n  };\n  onHandleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const { data: newUser } = await userAPI.onCreateUser({ body: this.state });\n      console.log(newUser);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  render() {\n    const {\n      _organizationName,\n      _organizationSize,\n      _password,\n      _comparePassword,\n      _isMatchingPassword,\n      _email,\n      _isAdmin,\n      _phoneNumber\n    } = this.state;\n    return (\n      <section className={s.create_new_account}>\n        <div>\n          <h2>New Account</h2>\n          <form onSubmit={this.onHandleSubmit} className={s.create_new_account_form}>\n            <label htmlFor='_email'>\n              <input\n                type='email'\n                value={_email}\n                placeholder='email address'\n                id='_email'\n                onChange={this.onHandleChange}\n                onBlur={this.onHandleValidate}\n              />\n            </label>\n            <label htmlFor='_password'>\n              <input\n                type='password'\n                placeholder='password'\n                id='_password'\n                value={_password}\n                onChange={this.onHandleChange}\n                onBlur={this.onHandleValidate}\n              />\n            </label>\n            <label htmlFor='_comparePassword'>\n              <input\n                type='password'\n                placeholder='re-type your password'\n                id='_comparePassword'\n                value={_comparePassword}\n                onChange={this.onHandleChange}\n                onBlur={this.onHandleValidate}\n              />\n            </label>\n            <label htmlFor='_phoneNumber'>\n              <input\n                type='phone'\n                value={_phoneNumber}\n                placeholder='Enter your phone number'\n                id='_phoneNumber'\n                onChange={this.onHandleChange}\n                onBlur={this.onHandleValidate}\n              />\n            </label>\n            <label htmlFor='_organizationName'>\n              <input\n                type='text'\n                placeholder='organization name'\n                id='_organizationName'\n                value={_organizationName}\n                onChange={this.onHandleChange}\n                onBlur={this.onHandleValidate}\n              />\n            </label>\n            <label htmlFor='_organizationSize'>\n              <input\n                type='text'\n                placeholder='organization size'\n                id='_organizationSize'\n                value={_organizationSize}\n                onChange={this.onHandleChange}\n                onBlur={this.onHandleValidate}\n              />\n            </label>\n            <label htmlFor='_isAdmin'>\n              are you the admin of this organization?\n              <input\n                type='checkbox'\n                value={_isAdmin}\n                onChange={e => {\n                  this.setState({\n                    _isAdmin: !this.state._isAdmin\n                  });\n                }}\n                id='_isAdmin'\n              />\n            </label>\n            <button type='submit'>Create Account</button>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default CreateNewAccount;\n","import React, { useState } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { Login, NavBar, Profile, NoMatch } from \"./components/ui\";\nimport { CreateNewAccount } from \"./components/modules\";\nimport \"./App.css\";\n\nfunction App() {\n  const [_isUser, setIsUser] = useState(true);\n  return (\n    <section className='App'>\n      <NavBar />\n      <div className='app_main'>\n        <Switch>\n          <Route exact path='/' component={Login} />\n          <Route exact path='/create-account' component={CreateNewAccount} />\n          <Route exact path='/home/:userId' component={Profile} />\n          <Route path='*' component={NoMatch} />\n        </Switch>{\" \"}\n      </div>\n    </section>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n// components\nimport { Login } from \"./components/ui\";\n\nReactDOM.render(\n  <Router>\n    <Route path='/' component={App} />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}